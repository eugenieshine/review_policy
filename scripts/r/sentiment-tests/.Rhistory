group_by(recid) %>%
mutate(mixed.ave = mean(mixed)) %>%
mutate(negative.ave = mean(negative)) %>%
mutate(neutral.ave = mean(neutral)) %>%
mutate(positive.ave = mean(positive))
class(split_reviews.df)
## Split long reviews
split_reviews.df <- data.frame(text=character(), recid=factor())
for(i in 1:nrow(long_reviews)) {
## Split by period
text.og <- strsplit(long_reviews[i,'text'], split="[.]")[[1]]
# Know how many groups by 5
group_num <- length(text.og) %/% 20
# Know how many words are left
group_last <- length(text.og) %% 20
# Generate the output
text <- tapply(text.og, c(rep(1:group_num, each = 20),
rep(group_num + 1, times = group_last)),toString)
text <- as.data.frame(text) %>%
mutate(recid = long_reviews[i,'recid']) %>%
mutate(word_count = sapply(strsplit(text, " "), length))
split_reviews.df <- rbind(split_reviews.df, text)
}
split_reviews.df['line'] <- as.numeric(rownames(split_reviews.df))
split_reviews.df <- merge(split_reviews.df, aws.reviews3.long, by='line', all.x = TRUE)
split_reviews.df <- split_reviews.df[,!(names(split_reviews.df) %in% c('line', 'X'))]
split_reviews.df <- na.omit(split_reviews.df)
split_reviews.df <- split_reviews.df[,c('recid','mixed','negative','neutral','positive')]
split_reviews.df['sentiment_cat'] <- toupper(colnames(split_reviews.df[,c('mixed','negative','neutral','positive')])[max.col(split_reviews.df[,c('mixed','negative','neutral','positive')],ties.method="first")])
split_reviews.df <- split_reviews.df[,c('recid','sentiment_cat','mixed','negative','neutral','positive')]
class(split_reviews.df)
## Bind
split_reviews.df$sentiment_cat <- as.factor(split_reviews.df$sentiment_cat)
aws_reviews.all <- bind_rows(not_long_reviews, split_reviews.df)
## Get average sentiment score
all.reviews <- aws.reviews3.csv %>%
group_by(recid) %>%
mutate(mixed.ave = mean(mixed)) %>%
mutate(negative.ave = mean(negative)) %>%
mutate(neutral.ave = mean(neutral)) %>%
mutate(positive.ave = mean(positive))
all.reviews <- all.reviews[,c('recid','mixed.ave','negative.ave','neutral.ave','positive.ave')] %>% distinct()
names(all.reviews) <- c('recid','mixed','negative','neutral','positive')
## Get sentiment category
all.reviews['sentiment_cat'] <- toupper(colnames(all.reviews[,c('mixed','negative','neutral','positive')])[max.col(split_reviews.df[,c('mixed','negative','neutral','positive')],ties.method="first")])
all.reviews <- all.reviews[,c('recid','sentiment_cat','mixed','negative','neutral','positive')]
all.reviews['sentiment_cat'] <- toupper(colnames(all.reviews[,c('mixed','negative','neutral','positive')])[max.col(all.reviews[,c('mixed','negative','neutral','positive')],ties.method="first")])
all.reviews <- all.reviews[,c('recid','sentiment_cat','mixed','negative','neutral','positive')]
View(all.reviews)
all.reviews[is.na(all.reviews),'recid']
View(all.reviews)
View(aws.reviews3.csv)
aws.reviews3.csv <- na.omit(aws.reviews3.csv)
## Export the split text
write.csv(aws.reviews3.csv, file = "aws-reviews3.csv",row.names=FALSE)
View(aws.reviews3.csv)
aws_reviews <- read.csv("~/Dropbox/Eugenie/data/processed/sentiment/aws-reviews3.csv")
View(aws_reviews)
## read .xlsx files
library(readxl)
## pretty tables
library(pander)
########################## load source files ############################
source("~/Dropbox/Eugenie/scripts/utils.R")
good_asin <- read_excel('~/Dropbox/Eugenie/data/raw/top100-phones-tablets.xlsx')
View(good_asin)
View(reviews2.csv)
reviews2.temp <- aws_reviews[,c('recid','item_id','child_id','rating','incentivized',
'is_deleted','verified_purchaser')]
View(reviews2.temp)
?merge
reviews3.temp <- merge(reviews2.temp, good_asin, by='item_id', all.x = T)
View(reviews3.temp)
summary(reviews3.temp)
#reviews3.temp <- merge(reviews2.temp, good_asin, by='item_id', all.x = T)
tablets <- good_asin[good_asin$tablets == 1, c('item_id','product_cat')]
View(tablets)
cell_phones <- good_asin[good_asin$cell_phones == 1, c('item_id','product_cat')]
View(cell_phones)
## add product category
reviews2.temp['tablets'] <- ifelse(reviews2.temp$item_id %in% tablets$item_id |
reviews2.temp$child_id %in% tablets$item_id, 1, 0)
reviews2.temp['cell_phones'] <- ifelse(reviews2.temp$item_id %in% cell_phones$item_id |
reviews2.temp$child_id %in% cell_phones$item_id, 1, 0)
reviews2.temp['product_cat'] <- ifelse(reviews2.temp$cell_phones == 1, 'cell_phones',
ifelse(reviews2.temp$tablets == 1, 'tablets', 'none'))
reviews2.temp$product_cat <- as.factor(reviews2.temp$product_cat)
table(reviews2.temp$product_cat)
## check records w/o a category
cat_sum <- reviews2.temp %>%
group_by(product_cat) %>%
summarise(product.count = n()) %>%
mutate(product.pct = product.count/sum(product.count)*100)
View(cat_sum)
unique(reviews2.temp$item_id)
reviews2.temp$item_id <- as.character(reviews2.temp$item_id)
unique(reviews2.temp$item_id)
reviews3.ids <- reviews2.temp[,c('item_id')]
reviews3.ids <- unique(reviews2.temp[,c('item_id')])
reviews3.ids <- bind(unique(reviews2.temp[,c('item_id')]), unique(reviews2.temp[,c('child_id')]))
reviews3.ids <- rbind(unique(reviews2.temp[,c('item_id')]), unique(reviews2.temp[,c('child_id')]))
View(reviews3.ids)
reviews2.temp$child_id <- as.character(reviews2.temp$child_id)
reviews3.ids <- c(unique(reviews2.temp[,c('item_id')]), unique(reviews2.temp[,c('child_id')]))
reviews3.ids <- unique(reviews3.ids)
length(unique(reviews2.temp[,c('item_id')]))
reviews3.temp <- reviews2.temp[,c('recid','tablets','cell_phones','product_cat')]
aws_reviews <- merge(aws_reviews, reviews3.temp, by='recid')
reviews2.temp <- aws_reviews
## turn factor to date variable
reviews2.temp$date <- as.Date(reviews2.temp$date, "%Y-%m-%d")
View(reviews2.csv)
## do brief time series analysis by year
## get year attribute
reviews2.temp['year'] <- format(reviews2.temp$date,"%Y")
reviews2.temp$year <- as.factor(reviews2.temp$year)
reviews.product$month <- format(reviews.product$date, '%Y-%m')
reviews.product$month <- as.Date(paste0(reviews.product$month,'-01'),'%Y-%m-%d')
review.product <- reviews2.temp
reviews.product$month <- format(reviews.product$date, '%Y-%m')
reviews.product$month <- as.Date(paste0(reviews.product$month,'-01'),'%Y-%m-%d')
reviews.product <- reviews2.temp
reviews.product$month <- format(reviews.product$date, '%Y-%m')
reviews.product$month <- as.Date(paste0(reviews.product$month,'-01'),'%Y-%m-%d')
View(reviews.product)
## get week dates
reviews.product$weeks <- floor_date(reviews.product$date, "week")
write.csv(reviews.product, file = "processed-reviews3.csv",row.names=FALSE)
## load processed data
reviews3.csv <- read.csv('~/Dropbox/Eugenie/data/processes/processed-reviews3.csv')
## load processed data
reviews3.csv <- read.csv('~/Dropbox/Eugenie/data/processed/processed-reviews3.csv')
########################## load library ############################
## for data manipulation
library(plyr)
library(dplyr)
library(tidyr)
library(purrr)
library(readr)
library(stringr)
library(reshape)
## for plotting
library(ggplot2)
library(ggmosaic)
library(plotly)
library(ggpubr)
## for modelling
library(plm)
library(mgcv)
library(GoodmanKruskal)
## for sentiment analysis
library(tidytext)
library(textdata)
library(textclean)
library(gutenbergr)
library(scales)
library(tm)
library(sentimentr)
############################ load data #############################
## Load raw data
reviews2.csv <- read.csv('~/Dropbox/Eugenie/data/raw/arslan-reviews2.csv')
## Load processed data
reviews3.csv <- read.csv('~/Dropbox/Eugenie/data/processed/processed-reviews3.csv')
## Turn numeric values to factors for reviews2
reviews2.csv$is_deleted <- as.factor(reviews2.csv$is_deleted)
reviews2.csv$incentivized <- as.factor(reviews2.csv$incentivized)
reviews2.csv$verified_purchaser <- as.factor(reviews2.csv$verified_purchaser)
reviews2.csv$recid <- as.factor(reviews2.csv$recid)
levels(reviews2.csv$verified_purchaser) <- c("unverified", "verified")
levels(reviews2.csv$incentivized) <- c("non-incentivized", "incentivized")
levels(reviews2.csv$is_deleted) <- c("kept", "deleted")
## Turn factor variables to char strings
reviews2.csv$text <- as.character(reviews2.csv$text)
reviews2.csv$title <- as.character(reviews2.csv$title)
## Turn factor variables to numeric
reviews2.csv$recid <- as.numeric(as.character(reviews2.csv$recid))
reviews2.csv$helpful_yes <- as.numeric(as.character(reviews2.csv$helpful_yes))
reviews2.csv$helpful_total <- as.numeric(as.character(reviews2.csv$helpful_total))
reviews2.csv$image_count <- as.numeric(as.character(reviews2.csv$image_count))
## Turn numeric values to factors for reviews3
reviews3.csv$is_deleted <- as.factor(reviews3.csv$is_deleted)
reviews3.csv$incentivized <- as.factor(reviews3.csv$incentivized)
reviews3.csv$verified_purchaser <- as.factor(reviews3.csv$verified_purchaser)
reviews3.csv$recid <- as.factor(reviews3.csv$recid)
levels(reviews3.csv$verified_purchaser) <- c("unverified", "verified")
levels(reviews3.csv$incentivized) <- c("non-incentivized", "incentivized")
levels(reviews3.csv$is_deleted) <- c("kept", "deleted")
## Turn factor variables to char strings for reviews3
reviews3.csv$text <- as.character(reviews3.csv$text)
reviews3.csv$title <- as.character(reviews3.csv$title)
## Turn factor variables to numeric for reviews3
reviews3.csv$recid <- as.numeric(as.character(reviews3.csv$recid))
reviews3.csv$helpful_yes <- as.numeric(as.character(reviews3.csv$helpful_yes))
reviews3.csv$helpful_total <- as.numeric(as.character(reviews3.csv$helpful_total))
reviews3.csv$image_count <- as.numeric(as.character(reviews3.csv$image_count))
View(reviews2.csv)
## add category data as extra columns
reviews2.csv['phone_batteries'] <- ifelse(reviews2.csv$item_id %in% good_asin$`PHONE BATTERIES` |
reviews2.csv$child_id %in% good_asin$`PHONE BATTERIES`, 1, 0)
reviews2.csv['phone_cables'] <- ifelse(reviews2.csv$item_id %in% good_asin$`PHONE CABLES` |
reviews2.csv$child_id %in% good_asin$`PHONE CABLES`, 1, 0)
reviews2.csv['screen_protectors'] <- ifelse(reviews2.csv$item_id %in% good_asin$`SCREEN PROTECTORS` |
reviews2.csv$child_id %in% good_asin$`SCREEN PROTECTORS`, 1, 0)
## drop this column when saving the result; this is just for better plotting and analysis
reviews2.csv['product_cat'] <- ifelse(reviews2.csv$phone_batteries == 1, 'phone_batteries',
ifelse(reviews2.csv$phone_cables == 1, 'phone_cables',
ifelse(reviews2.csv$screen_protectors == 1, 'screen_protectors', 'none')))
reviews2.csv$product_cat <- as.factor(reviews2.csv$product_cat)
############################# add time data ###########################
## turn factor to date variable
reviews2.csv$date <- as.Date(reviews2.csv$date, "%Y-%m-%d")
## do brief time series analysis by year
## get year attribute
reviews2.csv['year'] <- format(reviews2.csv$date,"%Y")
reviews2.csv$year <- as.factor(reviews2.csv$year)
reviews2.csv[is.na(reviews2.csv)] <- 0
reviews2.csv$month <- format(reviews2.csv$date, '%Y-%m')
reviews2.csv$month <- as.Date(paste0(reviews2.csv$month,'-01'),'%Y-%m-%d')
## get week dates
reviews2.csv$week <- floor_date(reviews2.csv$date, "week")
good_asin <- read_excel('~/Dropbox/Eugenie/data/raw/good_asin.xlsx')
############################ load data #############################
## load raw data
reviews2.csv <- read.csv('~/Dropbox/Eugenie/data/raw/arslan-reviews2.csv')
## turn numeric values to factors
reviews2.csv$is_deleted <- as.factor(reviews2.csv$is_deleted)
reviews2.csv$incentivized <- as.factor(reviews2.csv$incentivized)
reviews2.csv$verified_purchaser <- as.factor(reviews2.csv$verified_purchaser)
reviews2.csv$recid <- as.factor(reviews2.csv$recid)
levels(reviews2.csv$verified_purchaser) <- c("unverified", "verified")
levels(reviews2.csv$incentivized) <- c("non-incentivized", "incentivized")
levels(reviews2.csv$is_deleted) <- c("kept", "deleted")
## turn factor variables to char strings
reviews2.csv$text <- as.character(reviews2.csv$text)
reviews2.csv$title <- as.character(reviews2.csv$title)
## turn factor variables to numeric
reviews2.csv$helpful_yes <- as.numeric(as.character(reviews2.csv$helpful_yes))
reviews2.csv$helpful_total <- as.numeric(as.character(reviews2.csv$helpful_total))
reviews2.csv$image_count <- as.numeric(as.character(reviews2.csv$image_count))
## get stop words, use snowball lexicon
data(stop_words)
snowball <- stop_words[stop_words$lexicon=='snowball',]
## remove special chars
reviews2.csv <- reviews2.csv %>%
filter(str_detect(text, "^[^>]+[A-Za-z\\d]") | text == "")
########################### add product category #########################
## add category data as extra columns
reviews2.csv['phone_batteries'] <- ifelse(reviews2.csv$item_id %in% good_asin$`PHONE BATTERIES` |
reviews2.csv$child_id %in% good_asin$`PHONE BATTERIES`, 1, 0)
reviews2.csv['phone_cables'] <- ifelse(reviews2.csv$item_id %in% good_asin$`PHONE CABLES` |
reviews2.csv$child_id %in% good_asin$`PHONE CABLES`, 1, 0)
reviews2.csv['screen_protectors'] <- ifelse(reviews2.csv$item_id %in% good_asin$`SCREEN PROTECTORS` |
reviews2.csv$child_id %in% good_asin$`SCREEN PROTECTORS`, 1, 0)
## drop this column when saving the result; this is just for better plotting and analysis
reviews2.csv['product_cat'] <- ifelse(reviews2.csv$phone_batteries == 1, 'phone_batteries',
ifelse(reviews2.csv$phone_cables == 1, 'phone_cables',
ifelse(reviews2.csv$screen_protectors == 1, 'screen_protectors', 'none')))
reviews2.csv$product_cat <- as.factor(reviews2.csv$product_cat)
############################# add time data ###########################
## turn factor to date variable
reviews2.csv$date <- as.Date(reviews2.csv$date, "%Y-%m-%d")
## do brief time series analysis by year
## get year attribute
reviews2.csv['year'] <- format(reviews2.csv$date,"%Y")
reviews2.csv$year <- as.factor(reviews2.csv$year)
reviews2.csv[is.na(reviews2.csv)] <- 0
reviews2.csv$month <- format(reviews2.csv$date, '%Y-%m')
reviews2.csv$month <- as.Date(paste0(reviews2.csv$month,'-01'),'%Y-%m-%d')
## get week dates
reviews2.csv$week <- floor_date(reviews2.csv$date, "week")
View(reviews2.csv)
knitr::opts_chunk$set(echo = TRUE)
aws_reviews <- read.csv("~/Dropbox/Eugenie/data/processed/aws-reviews2-all.csv")
aws_reviews <- read.csv("~/Dropbox/Eugenie/data/processed/sentiment/aws-reviews2-all.csv")
reviews2.csv <- merge(reviews2.csv, aws_reviews, by='recid')
## Write the processed files
write.csv(reviews2.csv, file = "processed-reviews2.csv",row.names=FALSE)
write.csv(reviews3.csv, file = "processed-reviews3.csv",row.names=FALSE)
reviews3.csv <- read.csv("~/Dropbox/Eugenie/data/processed/processed-reviews3.csv")
reviews2.temp <- reviews3.csv
reviews2.temp <- reviews2.temp[as.numeric(as.character(reviews2.temp$year))>2013,]
View(reviews3.csv)
reviews2.temp <- reviews2.temp[reviews2.temp$date < '2019-09-16',]
## turn factor to date variable
reviews2.temp$date <- as.Date(reviews2.temp$date, "%Y-%m-%d")
reviews2.temp <- reviews2.temp[reviews2.temp$date < '2019-09-16',]
reviews2.temp <- reviews3.csv
reviews.product <- reviews2.temp[,c('recid','item_id','incentivized','product_cat','rating','word_count','helpful_yes','date','year','month','week')]
View(reviews2.temp)
reviews.product <- reviews2.temp[,c('recid','item_id','incentivized','product_cat','rating','word_count','helpful_yes','date','year','month','week')]
reviews.product <- reviews2.temp[,c('recid','item_id','incentivized','rating','word_count','helpful_yes','date','year','month','week')]
reviews.product <- reviews2.temp[,c('recid','item_id','product_cat','rating','word_count','helpful_yes','date','year','month','week')]
reviews.product <- reviews2.temp[,c('recid','item_id')]
View(reviews.product)
reviews2.temp <- reviews3.csv
reviews3.csv <- read.csv("~/Dropbox/Eugenie/data/processed/processed-reviews3.csv")
reviews.product <- reviews2.temp[,c('recid','item_id','incentivized','product_cat','rating','word_count','helpful_yes','date','year','month','week')]
reviews.product <- reviews2.temp[,c('recid','item_id','date','year','month','week')]
View(reviews3.csv)
reviews.product <- reviews3.csv[,c('recid','item_id','incentivized','product_cat','rating','word_count','helpful_yes','date','year','month','week')]
reviews.product <- reviews3.csv
reviews.product <- reviews.product[reviews.product$product_cat != 'none',]
## split on date
reviews.product_non <- reviews.product[reviews.product$date<'2016-10-03'&reviews.product$incentivized=='non-incentivized',]
reviews.product_incentivized <- reviews.product[reviews.product$date<'2016-10-03'&reviews.product$incentivized=='incentivized',]
reviews.product_after <- reviews.product[reviews.product$date>'2016-10-03',]
## mean positive sentiment probability by day
reviews.product_non <- reviews.product_non %>%
group_by(product_cat, date) %>%
mutate(day_positive = mean(positive))
reviews.product_incentivized <- reviews.product_incentivized %>%
group_by(product_cat, date) %>%
mutate(day_positive = mean(positive))
reviews.product_after <- reviews.product_after %>%
group_by(product_cat, date) %>%
mutate(day_positive = mean(positive))
## mean positive sentiment probability by week
reviews.product_non <- reviews.product_non %>%
group_by(product_cat, year, week(date)) %>%
mutate(week_positive = mean(positive))
reviews.product_incentivized <- reviews.product_incentivized %>%
group_by(product_cat, year, week(date)) %>%
mutate(week_positive = mean(positive))
reviews.product_after <- reviews.product_after %>%
group_by(product_cat, year, week(date)) %>%
mutate(week_positive = mean(positive))
## mean positive sentiment probability by month
reviews.product_non <- reviews.product_non %>%
group_by(product_cat, month) %>%
mutate(month_positive = mean(positive))
reviews.product_incentivized <- reviews.product_incentivized %>%
group_by(product_cat, month) %>%
mutate(month_positive = mean(positive))
reviews.product_after <- reviews.product_after %>%
group_by(product_cat, month) %>%
mutate(month_positive = mean(positive))
## plot by day
ggplot(NULL, aes(x = date, y = day_positive))+
geom_point(data=reviews.product_incentivized, aes(color = "incentivized"), alpha = 0.7,size=0.2)+
geom_point(data=reviews.product_non, aes(color = "non-incentivized"), alpha = 0.3,size=0.2)+
geom_point(data=reviews.product_after, aes(color = "unidentified"), alpha = 0.7,size=0.2)+
geom_smooth(data=reviews.product_incentivized,method = 'auto',aes(color='incentivized-line'),size=1,alpha = 0.6)+
geom_smooth(data=reviews.product_non,method = 'auto',aes(color='non-incentivized-line'),size=1,alpha = 0.6)+
geom_smooth(data=reviews.product_after,method = 'auto',aes(color='unidentified-line'),size=1,alpha = 0.6)+
theme_minimal()+
facet_grid(rows=vars(product_cat))+
geom_vline(xintercept = as.Date('2016-10-03'), color = "black", size=0.3)+
labs(x='day',y='mean positive sentiment probability',fill='category',title='Product Category Mean Positive Sentiment Probability by Day')
View(reviews.product_incentivized)
View(reviews.product_non)
View(reviews.product)
## turn factor to date variable
reviews.product$date <- as.Date(reviews.product$date, "%Y-%m-%d")
#reviews2.temp <- reviews2.temp[reviews2.temp$date < '2019-09-16',]
## split on date
reviews.product_non <- reviews.product[reviews.product$date<'2016-10-03'&reviews.product$incentivized=='non-incentivized',]
reviews.product_incentivized <- reviews.product[reviews.product$date<'2016-10-03'&reviews.product$incentivized=='incentivized',]
reviews.product_after <- reviews.product[reviews.product$date>'2016-10-03',]
View(reviews.product_non)
View(reviews.product_incentivized)
## mean positive sentiment probability by day
reviews.product_non <- reviews.product_non %>%
group_by(product_cat, date) %>%
mutate(day_positive = mean(positive))
reviews.product_incentivized <- reviews.product_incentivized %>%
group_by(product_cat, date) %>%
mutate(day_positive = mean(positive))
reviews.product_after <- reviews.product_after %>%
group_by(product_cat, date) %>%
mutate(day_positive = mean(positive))
## mean positive sentiment probability by week
reviews.product_non <- reviews.product_non %>%
group_by(product_cat, year, week(date)) %>%
mutate(week_positive = mean(positive))
reviews.product_incentivized <- reviews.product_incentivized %>%
group_by(product_cat, year, week(date)) %>%
mutate(week_positive = mean(positive))
reviews.product_after <- reviews.product_after %>%
group_by(product_cat, year, week(date)) %>%
mutate(week_positive = mean(positive))
## mean positive sentiment probability by month
reviews.product_non <- reviews.product_non %>%
group_by(product_cat, month) %>%
mutate(month_positive = mean(positive))
reviews.product_incentivized <- reviews.product_incentivized %>%
group_by(product_cat, month) %>%
mutate(month_positive = mean(positive))
reviews.product_after <- reviews.product_after %>%
group_by(product_cat, month) %>%
mutate(month_positive = mean(positive))
## plot by day
ggplot(NULL, aes(x = date, y = day_positive))+
geom_point(data=reviews.product_incentivized, aes(color = "incentivized"), alpha = 0.7,size=0.2)+
geom_point(data=reviews.product_non, aes(color = "non-incentivized"), alpha = 0.3,size=0.2)+
geom_point(data=reviews.product_after, aes(color = "unidentified"), alpha = 0.7,size=0.2)+
geom_smooth(data=reviews.product_incentivized,method = 'auto',aes(color='incentivized-line'),size=1,alpha = 0.6)+
geom_smooth(data=reviews.product_non,method = 'auto',aes(color='non-incentivized-line'),size=1,alpha = 0.6)+
geom_smooth(data=reviews.product_after,method = 'auto',aes(color='unidentified-line'),size=1,alpha = 0.6)+
theme_minimal()+
facet_grid(rows=vars(product_cat))+
geom_vline(xintercept = as.Date('2016-10-03'), color = "black", size=0.3)+
labs(x='day',y='mean positive sentiment probability',fill='category',title='Product Category Mean Positive Sentiment Probability by Day')
## by week
ggplot(NULL, aes(x = week, y = week_positive))+
geom_point(data=reviews.product_incentivized, aes(color = "incentivized"), alpha = 0.7,size=0.2)+
geom_point(data=reviews.product_non, aes(color = "non-incentivized"), alpha = 0.7,size=0.2)+
geom_point(data=reviews.product_after, aes(color = "unidentified"), alpha = 0.7,size=0.2)+
geom_smooth(data=reviews.product_incentivized,method = 'auto',aes(color='incentivized-line'),size=1,alpha = 0.6)+
geom_smooth(data=reviews.product_non,method = 'auto',aes(color='non-incentivized-line'),size=1,alpha = 0.6)+
geom_smooth(data=reviews.product_after,method = 'auto',aes(color='unidentified-line'),size=1,alpha = 0.6)+
theme_minimal()+
facet_grid(rows=vars(product_cat))+
geom_vline(xintercept = as.Date('2016-10-03'), color = "black", size=0.3)+
labs(x='week',y='mean positive sentiment probability',fill='category',title='Product Category Mean Positive Sentiment Probability by Week')
View(reviews.product_non)
reviews.product <- reviews3.csv[,c('recid','item_id','incentivized','product_cat','rating','word_count','helpful_yes','date','year','month','weeks')]
names(reviews.product) <- c('recid','item_id','incentivized','product_cat','rating','word_count','helpful_yes','date','year','month','week')
reviews3_csv <- read.csv('~/Dropbox/Eugenie/data/raw/amazon_basics_cable reviews.csv')
reviews3_csv$text <- as.character(reviews3_csv$text)
## Get long reviews
long_reviews <- reviews3_csv[reviews3_csv$word_count>968,c('recid','rating','word_count','text')]
## Get text
not_long_reviews <- reviews3_csv[!reviews3_csv$recid %in% long_reviews$recid,]
reviews3_aws <- as.data.frame(not_long_reviews$text)
names(reviews3_aws) <- 'text'
View(reviews3_aws)
write.csv(reviews3_aws, file = "amazonbasics-cables-text.csv",row.names=FALSE)
## Merge the original data
aws.reviews3.short <- read.csv('aws-reviews-amazonbasics-cables.csv')
not_long_reviews['line'] <- as.numeric(rownames(not_long_reviews))
not_long_reviews <- merge(not_long_reviews, aws.reviews3.short, by='line', all.x = TRUE)
not_long_reviews <- not_long_reviews[,c('recid','sentiment_cat','mixed','negative','neutral','positive')]
View(long_reviews)
## Get text
not_long_reviews <- reviews3_csv[!reviews3_csv$recid %in% long_reviews$recid,]
## Handle short reviews
not_long_reviews['line'] <- as.numeric(rownames(not_long_reviews))
not_long_reviews <- merge(not_long_reviews, aws.reviews3.short, by='line', all.x = TRUE)
not_long_reviews <- not_long_reviews[,c('recid','sentiment_cat','mixed','negative','neutral','positive')]
View(not_long_reviews)
## Export the split text
aws.reviews3.csv <- merge(reviews3_csv, not_long_reviews, by='recid', all.x = TRUE)
View(aws.reviews3.csv)
## Export the split text
#aws.reviews3.csv <- merge(reviews3_csv, not_long_reviews, by='recid', all.x = TRUE)
write.csv(aws.reviews3.csv, file = "aws-amazonbasics-cables.csv",row.names=FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
## load review data
source("~/Dropbox/Eugenie/scripts/libs.R")
# Load review data
reviews3.csv <- read.csv("~/Dropbox/Eugenie/data/processed/merged-reviews.csv")
reviews3.csv$date <- as.Date(reviews3.csv$date, "%Y-%m-%d")
# Load new AmazonBasics cable data
amazon_cables <- read.csv("~/Dropbox/Eugenie/data/processed/processed-amazonbasics-cables.csv")
# Load brand data
cable_brands <- read_excel("~/Dropbox/Eugenie/data/raw/amazon-cables.xlsx")
View(reviews3.csv)
merged_cables <- read.csv("~/Dropbox/Eugenie/data/processed/merged-cables.csv")
View(merged_cables)
aws.cables <- aws.reviews3.csv[,c("recid","sentiment_cat","mixed","negative","neutral","positive")]
reviews3.cables <- read.csv("~/Dropbox/Eugenie/data/processed/processed-reviews3-cables.csv")
View(reviews3.cables)
aws.reviews3.cables <- reviews3.cables[,c("recid","sentiment_cat","mixed","negative","neutral","positive")]
aws.cables <- rbind(aws.cables, aws.reviews3.cables)
merged_cables <- merge(merged_cables, aws.cables, by="recid")
merged_cables["Amazon"] <- ifelse(merged_cables$brand == "AmazonBasics", 1, 0)
merged_cables["Anker"] <- ifelse(merged_cables$brand == "Anker", 1, 0)
merged_cables["RAMPOW"] <- ifelse(merged_cables$brand == "RAMPOW", 1, 0)
merged_cables["other"] <- ifelse(!merged_cables$brand %in% c("AmazonBasics", "RAMPOW", "Anker"), 1, 0)
#merged_cables["Amazon"] <- ifelse(merged_cables$brand == "AmazonBasics", 1, 0)
#merged_cables["Anker"] <- ifelse(merged_cables$brand == "Anker", 1, 0)
#merged_cables["RAMPOW"] <- ifelse(merged_cables$brand == "RAMPOW", 1, 0)
#merged_cables["other"] <- ifelse(!merged_cables$brand %in% c("AmazonBasics", "RAMPOW", "Anker"), 1, 0)
write.csv(merged_cables, file = "merged-cables.csv",row.names=FALSE)
# Load new AmazonBasics cable data
merged_cables <- read.csv("~/Dropbox/Eugenie/data/processed/merged-cables.csv")
cables <- merged_cables
cables["brand.sim"] <- ifelse(cables$brand %in% c('AmazonBasics'), "AmazonBasics",
ifelse(cables$brand %in% c('Anker'), "Anker",
ifelse(cables$brand %in% c('RAMPOW'), "RAMPOW", "other")))
#merged_cables["Amazon"] <- ifelse(merged_cables$brand == "AmazonBasics", 1, 0)
#merged_cables["Anker"] <- ifelse(merged_cables$brand == "Anker", 1, 0)
#merged_cables["RAMPOW"] <- ifelse(merged_cables$brand == "RAMPOW", 1, 0)
#merged_cables["other"] <- ifelse(!merged_cables$brand %in% c("AmazonBasics", "RAMPOW", "Anker"), 1, 0)
#write.csv(merged_cables, file = "merged-cables.csv",row.names=FALSE)
## get the percentage of each group
cable.summary <- data.frame(table(cables[,c('incentivized')]))
cable.summary <- ddply(cable.summary, .(), mutate, Freq_pct = Freq/sum(Freq)*100)
knitr::kable(cable.summary)
reviews.product <- cables
reviews.length <- reviews.product[reviews.product$after_ban == "before",] %>%
#group_by(brand.sim) %>%
mutate(sd = sd(word_count)) %>%
mutate(variance = var(word_count)) %>%
mutate(mean = mean(word_count))
#reviews.length <- reviews.length[,c('brand.sim', "sd", "variance", "mean")] %>% distinct()
reviews.length <- reviews.length[,c("sd", "variance", "mean")] %>% distinct()
reviews.length <- reviews.length %>%
#group_by(brand.sim) %>%
mutate(threshold_2sd = mean+2*sd) %>%
mutate(threshold_3sd = mean+3*sd)
#reviews.product <- merge(reviews.product, reviews.length, by = 'brand.sim')
reviews.product <- merge(reviews.product, reviews.length)
reviews.product['word_count.2sd'] <- ifelse(reviews.product$word_count>reviews.product$threshold_2sd, 'fail', 'pass')
reviews.product['word_count.3sd'] <- ifelse(reviews.product$word_count>reviews.product$threshold_3sd, 'fail', 'pass')
View(reviews.product)
#merged_cables["Amazon"] <- ifelse(merged_cables$brand == "AmazonBasics", 1, 0)
#merged_cables["Anker"] <- ifelse(merged_cables$brand == "Anker", 1, 0)
#merged_cables["RAMPOW"] <- ifelse(merged_cables$brand == "RAMPOW", 1, 0)
#merged_cables["other"] <- ifelse(!merged_cables$brand %in% c("AmazonBasics", "RAMPOW", "Anker"), 1, 0)
write.csv(reviews.product, file = "processed-cables.csv",row.names=FALSE)
