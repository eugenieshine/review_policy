setwd("~/Documents/Reviews2019/scripts/r")
knitr::opts_chunk$set(echo = TRUE)
## load review data
source("~/Dropbox/Eugenie/scripts/utils.R")
aws_reviews <- read.csv("~/Dropbox/Eugenie/data/processed/aws-reviews2-all.csv")
reviews2.temp <- reviews2.csv
reviews2.temp <- reviews2.temp[as.numeric(as.character(reviews2.temp$year))>2013,]
reviews2.temp <- reviews2.temp[reviews2.temp$date < '2018-10-07',]
reviews2.temp <- reviews2.temp[reviews2.temp$product_cat != 'none',]
reviews.product <- merge(aws_reviews,reviews2.temp[,c('recid','item_id','incentivized','product_cat','rating','word_count','helpful_yes','date','year','month','week')])
View(reviews.product)
knitr::opts_chunk$set(echo = TRUE)
with(reviews.product, difftime(max(date), min(date)))
class(with(reviews.product, difftime(max(date), min(date))))
as.numeric(with(reviews.product, difftime(max(date), min(date))))
reviews.product %>%
group_by(item_id) %>%
summarise(review.count = n())
time.diff <- reviews.product %>%
group_by(item_id) %>%
summarise(review.count = as.numeric(difftime(max(date), min(date))))
View(time.diff)
## compute total number of reviews per item
review.item <- reviews.product %>%
group_by(item_id) %>%
summarise(review.count = n())
time.diff <- reviews.product %>%
group_by(item_id) %>%
summarise(time.diff = as.numeric(difftime(max(date), min(date))))
review.item <- merge(review.item, time.diff)
View(review.item)
## get the mean review count per day
review.item['ave.count'] <- review.item$review.count / review.item$time.diff
View(review.item)
reviews.daily <- reviews.product %>%
group_by(item_id, date) %>%
summarise(daily.count = n())
View(reviews.daily)
time.diff <- reviews.product[,c('item_id','date')] %>%
group_by(item_id) %>%
mutate(first_review.date = min(date)) %>%
mutate(last_review.date = max(date))
time.diff <- time.diff[,c('item_id','first_review.date','last_review.date')] %>%
distinct()
View(time.diff)
ddply(time.diff, .(item_id), summarise, Dte = seq(first_review.date, last_review.date, by = "day"))
library(data.table)
setDT(time.diff)[, .(Dte = seq(first_review.date, last_review.date, by = "day")), by = item_id]
time.diff <- setDT(time.diff)[, .(Dte = seq(first_review.date, last_review.date, by = "day")),
by = item_id]
View(time.diff)
View(time.diff)
time.diff <- reviews.product[,c('item_id','date')] %>%
group_by(item_id) %>%
mutate(first_review.date = min(date)) %>%
mutate(last_review.date = max(date))
time.diff <- time.diff[,c('item_id','first_review.date','last_review.date')] %>%
distinct()
time.diff <- setDT(time.diff)[, .(date = seq(first_review.date, last_review.date, by = "day")),
by = item_id]
reviews.daily <- merge(time.diff, reviews.daily, by=c('item_id','date'), all.x = T)
reviews.daily[is.na(reviews.daily)] <- 0
?sapply
?apply
reviews.daily <- reviews.daily %>%
group_by(item_id) %>%
mutate(sd = sd()) %>%
mutate(variance = var()) %>%
mutate(mean = mean())
reviews.daily <- reviews.daily %>%
group_by(item_id) %>%
mutate(sd = sd(daily.count)) %>%
mutate(variance = var(daily.count)) %>%
mutate(mean = mean(daily.count))
reviews.daily <- reviews.daily %>%
group_by(item_id) %>%
mutate(threshold = mean+3*sd)
reviews.over <- reviews.daily[reviews.daily$daily.count>reviews.daily$threshold,]
View(reviews.over)
reviews.daily['threshold.ceil'] <- ceiling(reviews.daily$threshold)
reviews.over_ceil <- reviews.daily[reviews.daily$daily.count>reviews.daily$threshold.ceil,]
View(reviews.over_ceil)
?rowsum
count.sum <- rowsum(reviews.over_ceil, daily.count)
count.sum <- sapply(reviews.over_ceil$daily.count, sum)
count.sum <- apply(reviews.over_ceil$daily.count, 2, sum)
count.sum <- rowSums(reviews.over_ceil$daily.count)
count.sum <- sum(reviews.over_ceil$daily.count)
count.sum <- sum(reviews.over_ceil$daily.count)
ceil_count.sum <- sum(reviews.over_ceil$daily.count)
count.sum <- sum(reviews.over$daily.count)
ceil_count.sum <- sum(reviews.over_ceil$daily.count)
total_reviews <- count(reviews.product)
View(total_reviews)
View(total_reviews)
reviews.product <- reviews.product %>%
group_by(item_id, date) %>%
mutate(over_daily_threshold = ifelse(item_id %in% reviews.over$item_id &
date %in% reviews.over$date, 1, 0))
count(reviews.product[reviews.product$over_daily_threshold==1])
count(reviews.product[reviews.product$over_daily_threshold==1]$over_daily_threshold)
reviews.product[reviews.product$over_daily_threshold == 1] %>% summarise(count=n())
reviews.product[reviews.product$over_daily_threshold == 1] %>% summarise(count=n())
reviews.product[reviews.product$over_daily_threshold == 1,] %>% summarise(count=n())
reviews.product$over_daily_threshold <- as.factor(reviews.product$over_daily_threshold)
reviews.product[reviews.product$over_daily_threshold == 1,] %>% summarise(count=n())
reviews.product[reviews.product$over_daily_threshold == 1,] %>% summarise(count=sum(count))
table(reviews.product[,'over_daily_threshold'])
View(reviews.over)
reviews.over['over_daily_threshold'] <- 1
reviews.product <- merge(reviews.product, reviews.over[,c('item_id','date','over_daily_threshold')],
by=c('item_id','date'))
reviews.product$over_daily_threshold <- as.factor(reviews.product$over_daily_threshold)
reviews.product <- merge(aws_reviews,reviews2.temp[,c('recid','item_id','incentivized','product_cat','rating','word_count','helpful_yes','date','year','month','week')])
reviews.product <- merge(reviews.product, reviews.over[,c('item_id','date','over_daily_threshold')],
by=c('item_id','date'), all.x = T)
reviews.product[is.na(reviews.product$over_daily_threshold)] <- 0
reviews.product[is.na(reviews.product$over_daily_threshold),] <- 0
reviews.product[is.na(reviews.product)] <- 0
reviews.product$over_daily_threshold <- as.factor(reviews.product$over_daily_threshold)
table(reviews.product[,'over_daily_threshold'])
aggregate(reviews.product[, 'rating'], list(reviews.product$over_daily_threshold), mean)
ggplot(data=reviews.product, aes(over_daily_threshold))+
geom_bar(aes(fill=as.factor(rating)), position="fill")+
scale_fill_brewer(palette="RdBu")
reviews.product['after_ban'] <- ifelse(reviews.product$date>'2016-10-02',1,0)
table(reviews.product[,c('after_ban','over_daily_threshold')])
temp <- data.frame(table(reviews.product[,c('after_ban','over_daily_threshold')]))
temp <- ddply(temp, ., mutate, Freq_pct = Freq/sum(Freq)*100)
temp <- data.frame(table(reviews.product[,c('after_ban','over_daily_threshold')]))
temp <- ddply(temp, .(), mutate, Freq_pct = Freq/sum(Freq)*100)
## cast for readibility
cast(temp, after_ban~over_daily_threshold, mean, value = 'Freq_pct')
temp <- data.frame(table(reviews.product[,c('after_ban','over_daily_threshold')]))
temp <- ddply(temp, .(), mutate, Freq_pct = Freq/sum(Freq)*100)
temp
temp <- data.frame(table(reviews.product[,c('after_ban','over_daily_threshold')]))
temp <- ddply(temp, .(), mutate, Freq_pct = Freq/sum(Freq)*100)
temp <- data.frame(table(reviews.product[,c('after_ban','over_daily_threshold')]))
ddply(temp, .(), mutate, Freq_pct = Freq/sum(Freq)*100)
temp <- data.frame(table(reviews.product[,c('after_ban','over_daily_threshold')]))
ddply(temp, .(after_ban), mutate, Freq_pct = Freq/sum(Freq)*100)
formula.fe <- rating ~ over_daily_threshold
# in model.fe, index = c('item_id') defines 'item_id' as the entity
model.fe <- plm(data = reviews.product, formula = formula.fe, index = c('item_id'), model = 'within')
# get the model summary
summary(model.fe)
temp <- data.frame(table(reviews.product[,c('after_ban','over_daily_threshold')]))
ddply(temp, .(after_ban), mutate, Freq_pct = Freq/sum(Freq)*100)
temp <- reviews.product %>%
group_by(item_id) %>%
mutate(over.count=sum(as.numeric(over_daily_threshold)))
View(temp)
temp <- reviews.product %>%
group_by(item_id) %>%
mutate(over.count=sum(as.numeric(over_daily_threshold))) %>%
mutate(total.count=n())
temp <- reviews.product %>%
group_by(item_id) %>%
mutate(over.count=sum(as.numeric(as.character(over_daily_threshold)))) %>%
mutate(total.count=n())
reviews.over <- reviews.over %>%
group_by(item_id, date) %>%
mutate(num.days=n())
reviews.over <- reviews.over %>%
group_by(item_id) %>%
mutate(num.days=n())
temp <- temp[,c('item_id','total.count','over.count')]
temp['over.pct'] <- temp$over.count / temp$total.count
temp['over.pct'] <- temp$over.count / temp$total.count
temp.2 <- reviews.over[,c('item_id','num.days')] %>% distinct()
temp <- merge(temp, temp.2, by='item_id')
temp <- reviews.product %>%
group_by(item_id) %>%
mutate(over.count=sum(as.numeric(as.character(over_daily_threshold)))) %>%
mutate(total.count=n())
temp <- temp[,c('item_id','total.count','over.count')]
temp['over.pct'] <- temp$over.count / temp$total.count * 100
temp.2 <- reviews.over[,c('item_id','num.days')] %>% distinct()
temp <- merge(temp, temp.2, by='item_id')
View(reviews.daily)
reviews.product <- reviews.product %>%
group_by(item_id) %>%
mutate(total_num.days=difftime(max(date), min(date)))
temp <- reviews.product %>%
group_by(item_id) %>%
mutate(over.count=sum(as.numeric(as.character(over_daily_threshold)))) %>%
mutate(total.count=n())
temp <- temp[,c('item_id','total.count','over.count')]
temp['over.pct'] <- temp$over.count / temp$total.count * 100
temp.2 <- reviews.over[,c('item_id','num.days')] %>% distinct()
temp <- merge(temp, temp.2, by='item_id') %>% distinct()
View(review.item)
View(time.diff)
time.diff <- reviews.product[,c('item_id','date')] %>%
group_by(item_id) %>%
mutate(first_review.date = min(date)) %>%
mutate(last_review.date = max(date))
time.diff <- time.diff[,c('item_id','first_review.date','last_review.date')] %>%
distinct()
temp.2 <- reviews.product[,c('item_id','total_num.days')] %>% distinct()
temp <- merge(temp, temp.2, by='item_id') %>% distinct()
View(temp.2)
temp <- reviews.product %>%
group_by(item_id) %>%
mutate(over.count=sum(as.numeric(as.character(over_daily_threshold)))) %>%
mutate(total.count=n())
temp <- temp[,c('item_id','total.count','over.count')]
temp['over.pct'] <- temp$over.count / temp$total.count * 100
temp.2 <- reviews.over[,c('item_id','num.days')] %>% distinct()
temp <- merge(temp, temp.2, by='item_id') %>% distinct()
temp.2 <- reviews.product[,c('item_id','total_num.days')] %>% distinct()
temp <- merge(temp.2, temp, by='item_id',all.x = T) %>% distinct()
