coefplot(didreg.length.before, col.pts="darkgreen", intercept=TRUE, varnames = new_names, main = 'Word Count', var.las=0.5)
coefplot(didreg.length.before, col.pts="darkgreen", intercept=TRUE, varnames = new_names, main = 'Word Count', var.las=2)
par(mfrow=c(1,5))
arm::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, varnames = c("","","","","","","","","","","","","",""), main = 'Rating')
arm::coefplot(didreg.sentiment.before, col.pts="red", varnames = new_names,main = 'Sentiment')
coefplot(didreg.length.before, col.pts="darkgreen", intercept=TRUE, varnames = new_names, main = 'Word Count')
par(mfrow=c(1,3))
arm::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, varnames = c("","","","","","","","","","","","","",""), main = 'Rating')
arm::coefplot(didreg.sentiment.before, col.pts="red", varnames = new_names,main = 'Sentiment')
coefplot(didreg.length.before, col.pts="darkgreen", intercept=TRUE, varnames = new_names, main = 'Word Count')
coef_cols = names(didreg.rating.before[["coefficients"]])[9:14]
new_names = c('Intercept', 'Non-Amazon','2016 May','2016 June','2016 July','2016 August','2016 September','2016 October','Non-Amazon x May', 'Non-Amazon x June', 'Non-Amazon x July', 'Non-Amazon x August', 'Non-Amazon x September', 'Non-Amazon x October')
#new_names = c('Non-Amazon x 2016 May', 'Non-Amazon x 2016 June', 'Non-Amazon x 2016 July', 'Non-Amazon x 2016 August', 'Non-Amazon x 2016 September', 'Non-Amazon x 2016 October')
empty_names = c("","","","","","","","","","","","","","")
par(mfrow=c(1,3))
arm::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, varnames = new_names, main = 'Rating')
arm::coefplot(didreg.sentiment.before, col.pts="red", varnames = empty_names,main = 'Sentiment')
coefplot(didreg.length.before, col.pts="darkgreen", intercept=TRUE, varnames = empty_names, main = 'Word Count')
par(mfrow=c(1,3))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, newNames = new_names, title = 'Rating')
par(mfrow=c(1,3))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, title = 'Rating')
coefplot::coefplot(didreg.sentiment.before, col.pts="red", newNames = empty_names,title = 'Sentiment')
names(didreg.rating.before[["coefficients"]]) <- new_names
coef_cols = names(didreg.rating.before[["coefficients"]])[9:14]
new_names = c('Intercept', 'Non-Amazon','2016 May','2016 June','2016 July','2016 August','2016 September','2016 October','Non-Amazon x May', 'Non-Amazon x June', 'Non-Amazon x July', 'Non-Amazon x August', 'Non-Amazon x September', 'Non-Amazon x October')
#new_names = c('Non-Amazon x 2016 May', 'Non-Amazon x 2016 June', 'Non-Amazon x 2016 July', 'Non-Amazon x 2016 August', 'Non-Amazon x 2016 September', 'Non-Amazon x 2016 October')
empty_names = c("","","","","","","","","","","","","","")
par(mfrow=c(1,3))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, title = 'Rating')
coefplot::coefplot(didreg.sentiment.before, col.pts="red", newNames = empty_names,title = 'Sentiment')
par(mfrow=c(1,3))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, title = 'Rating')
coefplot::coefplot(didreg.sentiment.before, col.pts="red", title = 'Sentiment')
coefplot(didreg.length.before, col.pts="darkgreen", intercept=TRUE, title = 'Word Count')
names(didreg.rating.before[["coefficients"]]) <- new_names
names(didreg.sentiment.before[["coefficients"]]) <- new_names
names(didreg.length.before[["coefficients"]]) <- new_names
names(didreg.helpfulness.before[["coefficients"]]) <- new_names
names(didreg.image.before[["coefficients"]]) <- new_names
coef_cols = names(didreg.rating.before[["coefficients"]])[9:14]
new_names = c('Intercept', 'Non-Amazon','2016 May','2016 June','2016 July','2016 August','2016 September','2016 October','Non-Amazon x May', 'Non-Amazon x June', 'Non-Amazon x July', 'Non-Amazon x August', 'Non-Amazon x September', 'Non-Amazon x October')
#new_names = c('Non-Amazon x 2016 May', 'Non-Amazon x 2016 June', 'Non-Amazon x 2016 July', 'Non-Amazon x 2016 August', 'Non-Amazon x 2016 September', 'Non-Amazon x 2016 October')
empty_names = c("","","","","","","","","","","","","","")
par(mfrow=c(1,3))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, title = 'Rating')
coefplot::coefplot(didreg.sentiment.before, col.pts="red", title = 'Sentiment')
coefplot::coefplot(didreg.length.before, col.pts="darkgreen", intercept=TRUE, title = 'Word Count')
coefplot(didreg.length.before, col.pts="darkgreen", intercept=TRUE, varnames = new_names, main = 'Word Count', var.las=2)
par(mfrow=c(1,3))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, title = 'Rating')
coefplot::coefplot(didreg.sentiment.before, color="red", title = 'Sentiment')
coefplot::coefplot(didreg.length.before, color="darkgreen", intercept=TRUE, title = 'Word Count')
par(mfrow=c(1,5))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, title = 'Rating')
coefplot::coefplot(didreg.sentiment.before, color="red", title = 'Sentiment')
coefplot::coefplot(didreg.length.before, color="darkgreen", intercept=TRUE, title = 'Word Count')
coefplot::coefplot(didreg.helpfulness.before, color="darkorange", intercept=TRUE, title = 'Helpfuness')
coefplot::coefplot(didreg.image.before, color="blue", intercept=TRUE, title = 'Image Count')
par(mfrow=c(1,5))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, title = 'Rating')
coefplot::coefplot(didreg.sentiment.before, color="red", title = 'Sentiment')
coefplot::coefplot(didreg.length.before, color="darkgreen", intercept=TRUE, title = 'Word Count')
coefplot::coefplot(didreg.helpfulness.before, color="darkorange", intercept=TRUE, title = 'Helpfuness')
coefplot::coefplot(didreg.image.before, color="black", intercept=TRUE, title = 'Image Count')
coefplot(didreg.helpfulness.before, col.pts="darkorange", intercept=TRUE, varnames = new_names, main = 'Helpfuness and Image Count', )
coefplot(didreg.image.before, add=TRUE, col.pts="blue", intercept=TRUE, varnames = new_names)
new_names = c('Intercept', 'NA','2016 May','2016 June','2016 July','2016 Aug','2016 Sept','2016 Oct','NA x May', 'NA x June', 'NA x July', 'NA x Aug', 'Non-Amazon x Sept', 'NA x Oct')
names(didreg.rating.before[["coefficients"]]) <- new_names
names(didreg.sentiment.before[["coefficients"]]) <- new_names
names(didreg.length.before[["coefficients"]]) <- new_names
names(didreg.helpfulness.before[["coefficients"]]) <- new_names
names(didreg.image.before[["coefficients"]]) <- new_names
coef_cols = names(didreg.rating.before[["coefficients"]])[9:14]
#new_names = c('NA x 2016 May', 'NA x 2016 June', 'Non-Amazon x 2016 July', 'Non-Amazon x 2016 August', 'Non-Amazon x 2016 September', 'Non-Amazon x 2016 October')
empty_names = c("","","","","","","","","","","","","","")
coefplot(didreg.helpfulness.before, col.pts="darkorange", intercept=TRUE, varnames = new_names, main = 'Helpfuness and Image Count', )
coefplot(didreg.image.before, add=TRUE, col.pts="blue", intercept=TRUE, varnames = new_names)
new_names = c('Intercept', 'NA','2016 May','2016 June','2016 July','2016 Aug','2016 Sept','2016 Oct','NA x May', 'NA x June', 'NA x July', 'NA x Aug', 'NA x Sept', 'NA x Oct')
names(didreg.rating.before[["coefficients"]]) <- new_names
names(didreg.sentiment.before[["coefficients"]]) <- new_names
names(didreg.length.before[["coefficients"]]) <- new_names
names(didreg.helpfulness.before[["coefficients"]]) <- new_names
names(didreg.image.before[["coefficients"]]) <- new_names
coef_cols = names(didreg.rating.before[["coefficients"]])[9:14]
#new_names = c('NA x 2016 May', 'NA x 2016 June', 'Non-Amazon x 2016 July', 'Non-Amazon x 2016 August', 'Non-Amazon x 2016 September', 'Non-Amazon x 2016 October')
empty_names = c("","","","","","","","","","","","","","")
coefplot(didreg.helpfulness.before, col.pts="darkorange", intercept=TRUE, varnames = new_names, main = 'Helpfuness and Image Count', )
coefplot(didreg.image.before, add=TRUE, col.pts="blue", intercept=TRUE, varnames = new_names)
coefplot(didreg.rating.before, col.pts="darkorange", intercept=TRUE, varnames = new_names, main = 'Rating and Sentiment', )
coefplot(didreg.sentiment.before, add=TRUE, col.pts="blue", intercept=TRUE, varnames = new_names)
coefplot(didreg.length.before, col.pts="darkgreen", intercept=TRUE, varnames = new_names, main = 'Word Count', var.las=2)
coefplot(didreg.rating.before, col.pts="black", intercept=TRUE, varnames = new_names, main = 'Rating and Sentiment', )
coefplot(didreg.sentiment.before, add=TRUE, col.pts="red", intercept=TRUE, varnames = new_names)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(coefplot)
library("arm")
## load review data
source("~/Dropbox/Eugenie/scripts/libs.R")
# Load review data
reviews.csv <- read.csv("~/Dropbox/Eugenie/data/processed_reviewMeta/merged-reviews.csv")
reviews.csv$date <- as.Date(reviews.csv$date, "%Y-%m-%d")
reviews.csv$week <- as.Date(reviews.csv$week, "%Y-%m-%d")
# Get reviews 6 months before and after the ban
reviews.csv <- reviews.csv[reviews.csv$date>'2016-04-02',]
reviews.csv <- reviews.csv[reviews.csv$date<'2017-04-02',]
# Load brand data
cable_brands <- read_excel("~/Dropbox/Eugenie/data/ReviewMeta_Amazon_Data/amazon-cables.xlsx")
tablet_brands <- read_excel("~/Dropbox/Eugenie/data/ReviewMeta_Amazon_Data/amazon-tablets.xlsx")
# Drop records with no product category.
reviews.csv <- reviews.csv[reviews.csv$product_cat != 'none',]
# Get selected columns for further analysis.
reviews.product <- reviews.csv[,c('recid','item_id','child_id','product_cat', 'incentivized','verified_purchaser','positive','rating','word_count','helpful_yes','image_count','date','year','month','week')]
# Add 'after_ban' label
reviews.product['after_ban'] <- ifelse(reviews.product$date>'2016-10-02',1,0)
#reviews.product$after_ban <- as.factor(reviews.product$after_ban)
#levels(reviews.product$after_ban) <- c("before", "after")
# Get cables
cables <- reviews.product[reviews.product$product_cat == "phone_cables",]
# Get brands
cables <- merge(cables, cable_brands, by='item_id', all.x=T)
cables2 <- cables[is.na(cables$brand),]
# Get brands for child_id
cables2 <- merge(cables2, cable_brands, by.x = 'child_id', by.y = 'item_id')
cables <- na.omit(cables)
# Merge
cables2 <- cables2[,c('recid','item_id','child_id','product_cat', 'incentivized','verified_purchaser','positive','rating','word_count','helpful_yes','image_count','date','year','month','week','after_ban','brand.y')]
names(cables2) <- c('recid','item_id','child_id','product_cat', 'incentivized','verified_purchaser','positive','rating','word_count','helpful_yes','image_count','date','year','month','week','after_ban','brand')
cables <- rbind(cables, cables2)
# Get tablets
tablets <- reviews.product[reviews.product$product_cat == "tablets",]
# Get brands
tablets <- merge(tablets, tablet_brands, by='item_id', all.x=T)
tablets2 <- tablets[is.na(tablets$brand),]
# Get brands for child_id
tablets2 <- merge(tablets2, cable_brands, by.x = 'child_id', by.y = 'item_id')
tablets <- na.omit(tablets)
# Merge
tablets2 <- tablets2[,c('recid','item_id','child_id','product_cat', 'incentivized','verified_purchaser','positive','rating','word_count','helpful_yes','image_count','date','year','month','week','after_ban','brand.y')]
names(tablets2) <- c('recid','item_id','child_id','product_cat', 'incentivized','verified_purchaser','positive','rating','word_count','helpful_yes','image_count','date','year','month','week','after_ban','brand')
tablets <- rbind(tablets, tablets2)
# Merge cables and tablets
did.reviews <- rbind(cables, tablets)
# Convert labels from factor to numeric
levels(did.reviews$incentivized) <- c(1, 0)
levels(did.reviews$verified_purchaser) <- c(0, 1)
did.reviews$incentivized <- as.numeric(as.character(did.reviews$incentivized))
did.reviews$verified_purchaser <- as.numeric(as.character(did.reviews$verified_purchaser))
# List of dependent variables
# Compute weekly stats for each product
# Mean measurement by week
did.reviews <- did.reviews %>%
group_by(item_id, week) %>%
mutate(week_n = n()) %>%
mutate(week_rating = mean(rating)) %>%
mutate(week_positive = mean(positive)) %>%
mutate(week_word_count = mean(word_count)) %>%
mutate(week_helpful_yes = mean(helpful_yes)) %>%
mutate(week_image_count = mean(image_count))
did.reviews <- did.reviews %>%
group_by(item_id, week) %>%
mutate(week_n_incentivized = sum(incentivized)) %>%
mutate(week_n_verified = sum(verified_purchaser)) %>%
mutate(week_incentivized = week_n_incentivized / week_n) %>%
mutate(week_verified = week_n_verified / week_n)
did.products <- did.reviews[,c('item_id','child_id','product_cat','week_n','week_positive','week_rating','week_word_count','week_helpful_yes','week_image_count','week_incentivized','week_verified','year','month','week','after_ban','brand')]
did.products <- did.products %>% distinct()
# Add amazon attribute
did.products['non_amazon_product'] <- ifelse(did.products$brand %in% c('AmazonBasics','fire'), 0, 1)
# Split to Amazon and non-Non-Amazon products
did.amazon <- did.products[did.products$non_amazon_product == 0,]
did.nonamazon <- did.products[did.products$non_amazon_product == 1,]
?coefplot
par(mfrow=c(1,5))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, title = 'Rating', strict=T)
did.before <- did.products[did.products$after_ban == 0,]
did.before$month <- as.factor(did.before$month)
didreg.rating.before <- lm(week_rating ~ non_amazon_product * month, data = did.before)
didreg.sentiment.before <- lm(week_positive ~ non_amazon_product * month, data = did.before)
didreg.length.before <- lm(week_word_count ~ non_amazon_product * month, data = did.before)
didreg.helpfulness.before <- lm(week_helpful_yes ~ non_amazon_product * month, data = did.before)
didreg.image.before <- lm(week_image_count ~ non_amazon_product * month, data = did.before)
#stargazer(didreg.rating.before, didreg.sentiment.before, didreg.length.before, didreg.helpfulness.before, didreg.image.before, title="Difference-in-Difference Pre-Treatment Parallel Assumption Check", align=TRUE, type='html', dep.var.labels=c("Rating","Sentiment","Length","Helpfulness", "Image count"))
new_names = c('Intercept', 'NA','2016 May','2016 June','2016 July','2016 Aug','2016 Sept','2016 Oct','NA x May', 'NA x June', 'NA x July', 'NA x Aug', 'NA x Sept', 'NA x Oct')
names(didreg.rating.before[["coefficients"]]) <- new_names
names(didreg.sentiment.before[["coefficients"]]) <- new_names
names(didreg.length.before[["coefficients"]]) <- new_names
names(didreg.helpfulness.before[["coefficients"]]) <- new_names
names(didreg.image.before[["coefficients"]]) <- new_names
coef_cols = names(didreg.rating.before[["coefficients"]])[9:14]
#new_names = c('NA x 2016 May', 'NA x 2016 June', 'Non-Amazon x 2016 July', 'Non-Amazon x 2016 August', 'Non-Amazon x 2016 September', 'Non-Amazon x 2016 October')
empty_names = c("","","","","","","","","","","","","","")
par(mfrow=c(1,5))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, title = 'Rating', strict=T)
coefplot::coefplot(didreg.sentiment.before, color="red", title = 'Sentiment')
coefplot::coefplot(didreg.length.before, color="darkgreen", intercept=TRUE, title = 'Word Count')
coefplot::coefplot(didreg.helpfulness.before, color="darkorange", intercept=TRUE, title = 'Helpfuness')
coefplot::coefplot(didreg.image.before, color="black", intercept=TRUE, title = 'Image Count')
new_names = c('Intercept', 'NA','2016 May','2016 June','2016 July','2016 Aug','2016 Sept','2016 Oct','NA x May', 'NA x June', 'NA x July', 'NA x Aug', 'NA x Sept', 'NA x Oct')
new_names2 = c('Intercept', 'Non-Amazon','2016 May','2016 June','2016 July','2016 Aug','2016 Sept','2016 Oct','Non-Amazon x May', 'Non-Amazon x June', 'Non-Amazon x July', 'Non-Amazon x Aug', 'Non-Amazon x Sept', 'Non-Amazon x Oct')
names(didreg.rating.before[["coefficients"]]) <- new_names2
names(didreg.sentiment.before[["coefficients"]]) <- new_names2
names(didreg.length.before[["coefficients"]]) <- new_names2
names(didreg.helpfulness.before[["coefficients"]]) <- new_names2
names(didreg.image.before[["coefficients"]]) <- new_names2
coef_cols = names(didreg.rating.before[["coefficients"]])[9:14]
#new_names = c('NA x 2016 May', 'NA x 2016 June', 'Non-Amazon x 2016 July', 'Non-Amazon x 2016 August', 'Non-Amazon x 2016 September', 'Non-Amazon x 2016 October')
empty_names = c("","","","","","","","","","","","","","")
par(mfrow=c(1,5))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, title = 'Rating', strict=T)
coefplot::coefplot(didreg.sentiment.before, color="red", title = 'Sentiment')
coefplot::coefplot(didreg.length.before, color="darkgreen", intercept=TRUE, title = 'Word Count')
coefplot::coefplot(didreg.helpfulness.before, color="darkorange", intercept=TRUE, title = 'Helpfuness')
coefplot::coefplot(didreg.image.before, color="black", intercept=TRUE, title = 'Image Count')
par(mfrow=c(1,5))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, title = 'Rating', ci_level = 0.99)
coefplot::coefplot(didreg.sentiment.before, color="red", title = 'Sentiment', ci_level = 0.99)
coefplot::coefplot(didreg.length.before, color="darkgreen", intercept=TRUE, title = 'Word Count', ci_level = 0.99)
coefplot::coefplot(didreg.helpfulness.before, color="darkorange", intercept=TRUE, title = 'Helpfuness', ci_level = 0.99)
coefplot::coefplot(didreg.image.before, color="black", intercept=TRUE, title = 'Image Count', ci_level = 0.99)
par(mfrow=c(1,5))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, title = 'Rating', ci_level = 1)
coefplot::coefplot(didreg.sentiment.before, color="red", title = 'Sentiment', ci_level =1)
coefplot::coefplot(didreg.length.before, color="darkgreen", intercept=TRUE, title = 'Word Count', ci_level = 1)
coefplot::coefplot(didreg.helpfulness.before, color="darkorange", intercept=TRUE, title = 'Helpfuness', ci_level = 1)
coefplot::coefplot(didreg.image.before, color="black", intercept=TRUE, title = 'Image Count', ci_level = 1)
par(mfrow=c(1,5))
coefplot::coefplot(didreg.rating.before, xlim=c(-1, 1), intercept=TRUE, title = 'Rating', ci_level = 1)
coefplot::coefplot(didreg.sentiment.before, color="red", title = 'Sentiment', ci_level =1)
coefplot::coefplot(didreg.length.before, color="darkgreen", intercept=TRUE, title = 'Word Count', ci_level = 1)
coefplot::coefplot(didreg.helpfulness.before, color="darkorange", intercept=TRUE, title = 'Helpfuness', ci_level = 1)
coefplot::coefplot(didreg.image.before, color="black", intercept=TRUE, title = 'Image Count', ci_level = 0.5)
install.packages("fixest")
library(fixest)
par(mfrow=c(1,5))
fixest::coefplot(didreg.rating.before, main = 'Rating', ci_level = 0.99)
fixest::coefplot(didreg.sentiment.before, x.shift = .2, add = TRUE, col="red", ci_level =0.99)
fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", ci_level = 1)
fixest::coefplot(didreg.helpfulness.before, x.shift = .2, add = TRUE, col="darkorange",  ci_level = 1)
fixest::coefplot(didreg.image.before, x.shift = .2, add = TRUE, col="black", ci_level = 0.5)
par(mfrow=c(1,5))
fixest::coefplot(didreg.rating.before, main = 'Rating', ci_level = 0.99)
fixest::coefplot(didreg.sentiment.before, x.shift = .2, add = TRUE, col="red", ci_level =0.99)
fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", ci_level = 0.99)
fixest::coefplot(didreg.helpfulness.before, x.shift = .2, add = TRUE, col="darkorange",  ci_level = 0.99)
fixest::coefplot(didreg.image.before, x.shift = .2, add = TRUE, col="black", ci_level = 0.99)
par(mfrow=c(1,5))
fixest::coefplot(didreg.rating.before, main = 'Rating', ci_level = 0.99)
fixest::coefplot(didreg.sentiment.before, x.shift = .2, add = TRUE, col=2, ci_level =0.99)
fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col=3, ci_level = 0.99)
fixest::coefplot(didreg.helpfulness.before, x.shift = .2, add = TRUE, col=4,  ci_level = 0.99)
fixest::coefplot(didreg.image.before, x.shift = .2, add = TRUE, col=5, ci_level = 0.99)
par(mfrow=c(1,5))
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', ci_level = 0.99)
fixest::coefplot(didreg.sentiment.before, x.shift = .2, add = TRUE, col="red")
fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen")
fixest::coefplot(didreg.helpfulness.before, x.shift = .2, add = TRUE, col="darkorange")
fixest::coefplot(didreg.image.before, x.shift = .2, add = TRUE, col="black")
par(mfrow=c(1,5))
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue')
fixest::coefplot(didreg.sentiment.before, x.shift = .2, add = TRUE, col="red")
fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen")
fixest::coefplot(didreg.helpfulness.before, x.shift = .2, add = TRUE, col="darkorange")
fixest::coefplot(didreg.image.before, x.shift = .2, add = TRUE, col="black")
par(mfrow=c(1,5))
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue')
#fixest::coefplot(didreg.sentiment.before, x.shift = .2, add = TRUE, col="red")
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen")
#fixest::coefplot(didreg.helpfulness.before, x.shift = .2, add = TRUE, col="darkorange")
#fixest::coefplot(didreg.image.before, x.shift = .2, add = TRUE, col="black")
par(mfrow=c(1,5))
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE)
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE)
#fixest::coefplot(didreg.sentiment.before, x.shift = .2, add = TRUE, col="red")
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen")
#fixest::coefplot(didreg.helpfulness.before, x.shift = .2, add = TRUE, col="darkorange")
#fixest::coefplot(didreg.image.before, x.shift = .2, add = TRUE, col="black")
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE)
fixest::coefplot(didreg.sentiment.before, x.shift = .2, add = TRUE, col="red")
fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen")
fixest::coefplot(didreg.helpfulness.before, x.shift = .2, add = TRUE, col="darkorange")
fixest::coefplot(didreg.image.before, x.shift = .2, add = TRUE, col="black")
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue')
fixest::coefplot(didreg.sentiment.before, x.shift = .2, add = TRUE, col="red")
fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen")
fixest::coefplot(didreg.helpfulness.before, x.shift = .2, add = TRUE, col="darkorange")
fixest::coefplot(didreg.image.before, x.shift = .2, add = TRUE, col="black")
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE)
fixest::coefplot(didreg.sentiment.before, x.shift = .2, add = TRUE, col="red", horiz=TRUE)
fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = .2, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = .2, add = TRUE, col="black", horiz=TRUE)
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE)
fixest::coefplot(didreg.sentiment.before, x.shift = .2, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = .2, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = .2, add = TRUE, col="black", horiz=TRUE)
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE)
fixest::coefplot(didreg.sentiment.before, x.shift = .5, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = .5, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = .5, add = TRUE, col="black", horiz=TRUE)
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE)
fixest::coefplot(didreg.sentiment.before, x.shift = .2, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = .4, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = .6, add = TRUE, col="black", horiz=TRUE)
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE)
fixest::coefplot(didreg.sentiment.before, x.shift = .3, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = .6, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = .9, add = TRUE, col="black", horiz=TRUE)
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE)
fixest::coefplot(didreg.sentiment.before, x.shift = .5, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = 1, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = 1.5, add = TRUE, col="black", horiz=TRUE)
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE)
fixest::coefplot(didreg.sentiment.before, x.shift = .5, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = 1, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = 1.5, add = TRUE, col="black", horiz=TRUE)
legend("topright", col = 1:2, pch = 20, lwd = 1, lty = 1:2,
legend = c("Clustered", "Standard"), title = "Standard-Errors")
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE, drop=c('Intercept'))
fixest::coefplot(didreg.sentiment.before, x.shift = .5, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = 1, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = 1.5, add = TRUE, col="black", horiz=TRUE)
legend("topright", col = 1:2, pch = 20, lwd = 1, lty = 1:2,
legend = c("Clustered", "Standard"), title = "Standard-Errors")
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE, drop=c('Intercept','Non-Amazon','2016 May','2016 June','2016 July','2016 Aug','2016 Sept','2016 Oct'))
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE, drop=c('Intercept','Non-Amazon','2016 May'))
fixest::coefplot(didreg.sentiment.before, x.shift = .5, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = 1, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = 1.5, add = TRUE, col="black", horiz=TRUE)
legend("topright", col = 1:2, pch = 20, lwd = 1, lty = 1:2,
legend = c("Clustered", "Standard"), title = "Standard-Errors")
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE, drop=c('Intercept','Non-Amazon','2016'))
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE, drop=c('Intercept','2016'))
fixest::coefplot(didreg.sentiment.before, x.shift = .5, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = 1, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = 1.5, add = TRUE, col="black", horiz=TRUE)
legend("topright", col = 1:2, pch = 20, lwd = 1, lty = 1:2,
legend = c("Clustered", "Standard"), title = "Standard-Errors")
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE, drop=c('Intercept','2016'))
fixest::coefplot(didreg.sentiment.before, x.shift = .5, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = 1, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = 1.5, add = TRUE, col="black", horiz=TRUE)
legend("topright", col = c('blue','red'), pch = 20, lwd = 1, lty = 1:2,
legend = c("Clustered", "Standard"), title = "Standard-Errors")
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE, drop=c('Intercept','2016'))
fixest::coefplot(didreg.sentiment.before, x.shift = .3, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = 6, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = 0.9, add = TRUE, col="black", horiz=TRUE)
legend("topright", col = c('blue','red','darkorange','black'), pch = 20, lwd = 1,
legend = c("Rating", "Sentiment",'Helpfulness','Image Count'), title = "Standard-Errors")
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE, drop=c('Intercept','2016'))
fixest::coefplot(didreg.sentiment.before, x.shift = .3, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = 0.6, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = 0.9, add = TRUE, col="black", horiz=TRUE)
legend("topright", col = c('blue','red','darkorange','black'), pch = 20, lwd = 1,
legend = c("Rating", "Sentiment",'Helpfulness','Image Count'), title = "Standard-Errors")
fixest::coefplot(didreg.rating.before, main = 'Rating', col='blue', horiz=TRUE, drop=c('Intercept','2016'))
fixest::coefplot(didreg.sentiment.before, x.shift = .3, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = 0.6, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = 0.9, add = TRUE, col="black", horiz=TRUE)
legend("topright", col = c('blue','red','darkorange','black'), pch = 16, lwd = 1,
legend = c("Rating", "Sentiment",'Helpfulness','Image Count'), title = "Standard-Errors")
fixest::coefplot(didreg.rating.before, main = '', col='blue', horiz=TRUE, drop=c('Intercept','2016'))
fixest::coefplot(didreg.sentiment.before, x.shift = .3, add = TRUE, col="red", horiz=TRUE)
#fixest::coefplot(didreg.length.before, x.shift = .2, add = TRUE, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.helpfulness.before, x.shift = 0.6, add = TRUE, col="darkorange", horiz=TRUE)
fixest::coefplot(didreg.image.before, x.shift = 0.9, add = TRUE, col="black", horiz=TRUE)
legend("topright", col = c('blue','red','darkorange','black'), pch = 16, lwd = 1,
legend = c("Rating", "Sentiment",'Helpfulness','Image Count'), title = "Standard-Errors")
fixest::coefplot(didreg.length.before, col="darkgreen", horiz=TRUE)
fixest::coefplot(didreg.length.before, col="darkgreen", horiz=TRUE)
legend("topright", col = c('darkgreen'), pch = 16, lwd = 1,
legend = c("Word Count"), title = "Standard-Errors")
fixest::coefplot(didreg.length.before, col="darkgreen", horiz=TRUE, drop=c('Intercept','2016'))
legend("topright", col = c('darkgreen'), pch = 16, lwd = 1,
legend = c("Word Count"), title = "Standard-Errors")
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
## load review data
source("~/Dropbox/Eugenie/scripts/libs.R")
# Load review data
did.reviews <- read.csv("~/Dropbox/Eugenie/data/processed_julian_amazon_data/reviews_mcauley_description_full.csv")
# Load review data
did.reviews <- read.csv("~/Dropbox/Eugenie/data/processed_julian_amazon_data/did/reviews_mcauley_description_full.csv")
# Get reviews 6 months before and after the ban
reviews <- reviews[reviews$date>='2016-04-02',]
# Get reviews 6 months before and after the ban
reviews <- did.reviews[did.reviews$date>='2016-04-02',]
reviews <- did.reviews[did.reviews$date<='2017-04-02',]
# Get reviews 6 months before and after the ban
reviews <- did.reviews[did.reviews$reviewTime>='2016-04-02',]
reviews <- did.reviews[did.reviews$reviewTime<='2017-04-02',]
reviews$date <- as.Date(reviews$reviewTime, "%Y-%m-%d")
reviews$week <- floor_date(reviews$date, "week")
reviews$after_ban <- ifelse(reviews$date>'2016-10-02',1,0)
View(did.reviews)
# Get selected columns for further analysis.
reviews.product <- reviews[,c('overall', 'vote', 'verified', 'reviewerID', 'asin', 'word_count', 'image', 'category', 'brand', 'price', 'main_cat', 'amazon', 'review_count', 'sim1', 'date', 'week', 'after_ban')]
# Get selected columns for further analysis.
reviews.product <- reviews[,c('overall', 'vote', 'verified', 'reviewerID', 'asin', 'word_count', 'image', 'category', 'brand', 'price', 'main_cat', 'amazon', 'sim1', 'date', 'week', 'after_ban')]
reviews.product$rating <- reviews.product$overall
reviews.product$item_id <- reviews.product$asin
reviews.product$helpful_yes <- reviews.product$vote
reviews.product$image_count <- reviews.product$image
did.reviews <- reviews.product[,c('rating', 'helpful_yes', 'verified', 'reviewerID', 'item_id', 'word_count', 'image_count', 'category', 'brand', 'price', 'main_cat', 'amazon', 'review_count', 'sim1', 'date', 'week', 'after_ban')]
did.reviews <- reviews.product[,c('rating', 'helpful_yes', 'verified', 'reviewerID', 'item_id', 'word_count', 'image_count', 'category', 'brand', 'price', 'main_cat', 'amazon', 'sim1', 'date', 'week', 'after_ban')]
View(reviews.product)
View(reviews)
# Load review data
reviews <- read.csv("~/Dropbox/Eugenie/data/processed_julian_amazon_data/did/reviews_mcauley_description_full.csv")
reviews$date <- as.Date(reviews$reviewTime, "%Y-%m-%d")
reviews$week <- floor_date(reviews$date, "week")
reviews$after_ban <- ifelse(reviews$date>'2016-10-02',1,0)
View(reviews)
# Get selected columns for further analysis.
reviews.product <- reviews[,c('overall', 'vote', 'verified', 'reviewerID', 'asin', 'word_count', 'image', 'category', 'brand', 'price', 'main_cat', 'amazon', 'sim1', 'date', 'week', 'after_ban')]
reviews.product$rating <- reviews.product$overall
reviews.product$item_id <- reviews.product$asin
reviews.product$helpful_yes <- reviews.product$vote
reviews.product$image_count <- reviews.product$image
View(reviews.product)
did.reviews <- reviews.product[,c('rating', 'helpful_yes', 'verified', 'reviewerID', 'item_id', 'word_count', 'image_count', 'category', 'brand', 'price', 'main_cat', 'amazon', 'sim1', 'date', 'week', 'after_ban')]
View(did.reviews)
# List of dependent variables
# Compute weekly stats for each product
# Mean measurement by week
did.reviews <- did.reviews %>%
group_by(item_id, week) %>%
mutate(week_n = n()) %>%
mutate(week_rating = mean(rating)) %>%
#mutate(week_positive = mean(positive)) %>%
mutate(week_word_count = mean(word_count)) %>%
mutate(week_helpful_yes = mean(helpful_yes)) %>%
mutate(week_image_count = mean(image_count))
did.reviews <- reviews.product[,c('rating', 'helpful_yes', 'verified', 'reviewerID', 'item_id', 'word_count', 'image_count', 'category', 'brand', 'price', 'main_cat', 'amazon', 'sim1', 'date', 'week', 'after_ban')]
# List of dependent variables
# Compute weekly stats for each product
# Mean measurement by week
did.reviews <- did.reviews %>%
group_by(item_id, week) %>%
mutate(weekly_review_count = n()) %>%
mutate(avg_rating = mean(rating)) %>%
#mutate(week_positive = mean(positive)) %>%
mutate(avg_word_count = mean(word_count)) %>%
mutate(avg_vote = mean(helpful_yes)) %>%
mutate(avg_image = mean(image_count))
did.products <- did.reviews[,c('item_id','category','weekly_review_count','avg_rating','avg_word_count','avg_vote','avg_image','week','after_ban','brand', 'amazon','price','sim1','main_cat')]
did.products <- did.products %>% distinct()
View(did.products)
# Write to save
write.csv(did.products, file="~/Dropbox/Eugenie/data/processed_julian_amazon_data/did/products_mcauley_description_full.csv", row.names=FALSE)
# Write to save
write.csv(did.reviews, file="~/Dropbox/Eugenie/data/processed_julian_amazon_data/did/reviews_mcauley_description_full.csv", row.names=FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
## load review data
source("~/Dropbox/Eugenie/scripts/libs.R")
# Load review data
reviews <- read.csv("~/Dropbox/Eugenie/data/processed_julian_amazon_data/did/reviews_mcauley_description_full.csv")
reviews$date <- as.Date(reviews$reviewTime, "%Y-%m-%d")
reviews$week <- floor_date(reviews$date, "week")
reviews$after_ban <- ifelse(reviews$date>'2016-10-02',1,0)
# List of dependent variables
# Compute weekly stats for each product
# Mean measurement by week
did.reviews <- did.reviews %>%
group_by(item_id, week) %>%
mutate(weekly_review_count = n()) %>%
mutate(avg_rating = mean(overall)) %>%
mutate(avg_sentiment = mean(sentiment)) %>%
mutate(avg_word_count = mean(word_count)) %>%
mutate(avg_vote = mean(vote)) %>%
mutate(avg_image = mean(image))
# List of dependent variables
# Compute weekly stats for each product
# Mean measurement by week
did.reviews <- reviews %>%
group_by(item_id, week) %>%
mutate(weekly_review_count = n()) %>%
mutate(avg_rating = mean(overall)) %>%
mutate(avg_sentiment = mean(sentiment)) %>%
mutate(avg_word_count = mean(word_count)) %>%
mutate(avg_vote = mean(vote)) %>%
mutate(avg_image = mean(image))
# List of dependent variables
# Compute weekly stats for each product
# Mean measurement by week
did.reviews <- reviews %>%
group_by(asin, week) %>%
mutate(weekly_review_count = n()) %>%
mutate(avg_rating = mean(overall)) %>%
mutate(avg_sentiment = mean(sentiment)) %>%
mutate(avg_word_count = mean(word_count)) %>%
mutate(avg_vote = mean(vote)) %>%
mutate(avg_image = mean(image))
View(did.reviews)
# Write to save
write.csv(did.reviews, file="~/Dropbox/Eugenie/data/processed_julian_amazon_data/did/reviews_mcauley_description_full.csv", row.names=FALSE)
